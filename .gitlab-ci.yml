#Para ativar o deploy da imagem no registry, retire o '#' do stage '- deploy'
#e também da  configuração do job 'image_update'

image: arquiteturasenior/node-sonar-runner:node20-sonar4

stages:
  - build
  - qa
  # - deploy

before_script:
  - PROJECT_VERSION=${CI_COMMIT_SHA:0:7}

build:develop:
  stage: build
  cache:
    key: $CI_PROJECT_NAME
    paths:
      - node_modules/
  before_script:
    - rm -rf dist
    - rm -rf ./package-lock.json
    - npm install
  script:
    - npm run build:dev --ssl true
  artifacts:
    paths:
      - dist
  except:
    - staging
    - tags

build:homol:
  stage: build
  cache:
    key: $CI_PROJECT_NAME
    paths:
      - node_modules/
  before_script:
    - rm -rf dist
    - rm -rf ./package-lock.json
    - npm install
  script:
    - npm run build:homol --ssl true
  artifacts:
    paths:
      - dist
  only:
    - staging

build:prod:
  stage: build
  cache:
    key: $CI_PROJECT_NAME
    paths:
      - node_modules/
  before_script:
    - rm -rf dist
    - rm -rf ./package-lock.json
    - npm install
  script:
    - npm run build:prod --ssl true
  artifacts:
    paths:
      - dist
  only:
    - tags

sonarqube:develop:
  stage: qa
  script:
    - sonar-scanner -Dsonar.host.url=$SONAR_URL -Drevision=$PROJECT_VERSION -Dsonar.projectName=unstable_$CI_PROJECT_NAME -Dsonar.projectVersion=$PROJECT_VERSION -Dsonar.projectKey=unstable_$CI_PROJECT_NAME -Dsonar.exclusions=**/src/assets/* -Dsonar.sources=.
  only:
    - develop

# image_update:
#   image:
#     name: gcr.io/kaniko-project/executor:debug
#     entrypoint: ['']
#   variables:
#     DOCKER_TLS_CERTDIR: ''
#   stage: deploy
#   script:
#     - cp -R nginx dist/
#     - cp entrypoint.sh dist/
#     - echo "{\"auths\":{\"registry.gitlab.com\":{\"username\":\"$GITLAB_USER\",\"password\":\"$GITLAB_TOKEN\"}}}" > /kaniko/.docker/config.json
#     - IMAGE_TAG=registry.gitlab.com/$GITLAB_USER/docker-registry/$CI_PROJECT_NAME:$CI_COMMIT_REF_NAME
#     - /kaniko/executor --context $CI_PROJECT_DIR/dist --dockerfile $CI_PROJECT_DIR/Dockerfile --destination $IMAGE_TAG
#     - echo "$IMAGE_TAG"
#   only:
#     - tags
#     - staging
